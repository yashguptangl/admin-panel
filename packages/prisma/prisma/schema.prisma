generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  username        String
  email           String       @unique
  mobile          String       @unique
  password        String
  otp             Int
  isPhoneVerified Boolean      @default(false)
  role            String       @default("user")
  contactLogs     ContactLog[]
  wishlists       Wishlist[]
}

model Owner {
  id                   Int                   @id @default(autoincrement())
  username             String
  email                String
  mobile               String                @unique
  password             String
  otp                  Int
  isPhoneVerified      Boolean               @default(false)
  points               Int                   @default(10)
  isKYCVerified        Boolean               @default(false)
  role                 String                @default("owner")
  contactLogs          ContactLog[]
  FlatInfo             FlatInfo[]
  PgInfo               PgInfo[]
  RoomInfo             RoomInfo[]
  verificationRequests VerificationRequest[]
  hourlyInfo           hourlyInfo[]
}

model Agent {
  id                   Int                   @id @default(autoincrement())
  username             String
  email                String                @unique
  mobile               String                @unique
  password             String
  otp                  Int
  isPhoneVerified      Boolean               @default(false)
  agentId              String                @unique
  isKYCVerified        Boolean               @default(false)
  isVerifiedByAdmin    Boolean               @default(false)
  personverifiedName   String
  walletRs             Int                   @default(0)
  role                 String                @default("agent")
  isProfileComplete    Boolean               @default(false)
  Agentprogress        Agentprogress?
  VerificationRequests VerificationRequest[]
}

model Agentprogress {
  id        Int      @id @default(autoincrement())
  agentId   String   @unique
  step      String
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  agent     Agent    @relation(fields: [agentId], references: [agentId])
}

model FlatInfo {
  id                     Int      @id @default(autoincrement())
  ownerId                Int
  Type                   String   @default("Flat")
  city                   String
  townSector             String
  location               String
  landmark               String
  BHK                    String
  Offer                  String
  totalFlat              Int
  Adress                 String
  noticePeriod           String
  furnishingType         String
  accomoType             String
  parking                String[]
  preferTenants          String[]
  petsAllowed            Boolean
  genderPrefer           String
  flatType               String
  careTaker              String
  flatInside             String[]
  flatOutside            String[]
  isVerified             Boolean  @default(false)
  verificationPending    Boolean  @default(true)
  paymentDone            Boolean  @default(false)
  isVisible              Boolean  @default(true)
  isDraft                Boolean
  updatedByOwner         DateTime
  verifiedByAdminOrAgent DateTime
  postPropertyByAdmin    Boolean  @default(false)
  createdAt              DateTime @default(now())
  MaxPrice               Int
  MinPrice               Int
  security               Int
  maintenance            Int
  waterSupply            Int
  powerBackup            Int
  listingShowNo          String
  totalFloor             Int
  AdressByAPI            String
  isLiveLocation         Boolean  @default(false)
  latitude               Decimal
  longitude              Decimal
  owner                  Owner    @relation(fields: [ownerId], references: [id])
}

model PgInfo {
  id                     Int      @id @default(autoincrement())
  ownerId                Int
  Type                   String   @default("Pg")
  city                   String
  townSector             String
  location               String
  landmark               String
  BHK                    String
  adress                 String
  Offer                  String
  totalPG                Int
  PGType                 String
  bedCount               Int
  noticePeriod           String
  furnishingType         String
  accomoType             String
  foodAvailable          Boolean
  parking                String[]
  preferTenants          String[]
  genderPrefer           String
  timeRestrict           Boolean
  PGInside               String[]
  PGOutside              String[]
  careTaker              String
  isVerified             Boolean  @default(false)
  verificationPending    Boolean  @default(true)
  paymentDone            Boolean  @default(false)
  isVisible              Boolean  @default(true)
  isDraft                Boolean
  updatedByOwner         DateTime
  verifiedByAdminOrAgent DateTime
  postPropertyByAdmin    Boolean  @default(false)
  createdAt              DateTime @default(now())
  MinPrice               Int
  MaxPrice               Int
  security               Int
  maintenance            Int
  waterSupply            Int
  powerBackup            Int
  listingShowNo          String
  totalFloor             Int
  AdressByAPI            String
  isLiveLocation         Boolean  @default(false)
  latitude               Decimal
  longitude              Decimal
  owner                  Owner    @relation(fields: [ownerId], references: [id])
}

model RoomInfo {
  id                     Int      @id @default(autoincrement())
  ownerId                Int
  Type                   String   @default("Room")
  city                   String
  townSector             String
  location               String
  BHK                    String
  landmark               String
  Offer                  String
  adress                 String
  totalRoom              Int
  noticePeriod           String
  furnishingType         String
  accomoType             String
  parking                String[]
  preferTenants          String[]
  genderPrefer           String
  roomType               String
  roomInside             String[]
  roomOutside            String[]
  careTaker              String
  RoomAvailable          String
  isVerified             Boolean  @default(false)
  verificationPending    Boolean  @default(true)
  paymentDone            Boolean  @default(false)
  isVisible              Boolean  @default(true)
  isDraft                Boolean
  updatedByOwner         DateTime
  verifiedByAdminOrAgent DateTime
  postPropertyByAdmin    Boolean  @default(false)
  createdAt              DateTime @default(now())
  MinPrice               Int
  MaxPrice               Int
  security               Int
  maintenance            Int
  powerBackup            Int
  waterSupply            Int
  listingShowNo          String
  totalFloor             Int
  AdressByAPI            String
  isLiveLocation         Boolean  @default(false)
  latitude               Decimal
  longitude              Decimal
  owner                  Owner    @relation(fields: [ownerId], references: [id])
}

model ContactLog {
  id            Int      @id @default(autoincrement())
  ownerId       Int
  userId        Int
  listingId     Int
  customerName  String
  customerPhone String
  ownerPhone    String
  accessDate    DateTime
  expiryDate    DateTime
  propertyType  String
  isExpired     Boolean  @default(false)
  ownerName     String
  ownerDeleted  Boolean  @default(false)
  userDeleted   Boolean  @default(false)
  landmark      String
  location      String
  owner         Owner    @relation(fields: [ownerId], references: [id])
  user          User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id               String     @id @default(uuid())
  listingType      String
  agentId          String?
  createdAt        DateTime   @default(now())
  ownerId          Int
  verificationType VerifyType @default(SELF)
  listingId        Int
  imagesUploaded   Boolean    @default(false)
  listingShowNo    String?
  updatedAt        DateTime
  status           StatusType @default(PENDING)
  city             String
  townSector       String
  location         String
  address          String
  agent            Agent?     @relation(fields: [agentId], references: [agentId])
  owner            Owner      @relation(fields: [ownerId], references: [id])

  @@index([agentId])
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int
  listingId Int
  type      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(EMPLOYEE)
  verified  Boolean  @default(false)
  username  String
  createdAt DateTime @default(now())
}

model hourlyInfo {
  id                     Int      @id @default(autoincrement())
  ownerId                Int
  Type                   String   @default("hourlyroom")
  city                   String
  townSector             String
  location               String
  landmark               String
  palaceName             String
  BedCount               Int
  adress                 String
  totalRoom              Int
  noofGuests             Int
  furnishingType         String
  accomoType             String
  acType                 String
  parking                String[]
  foodAvailable          Boolean
  preferTenants          String[]
  genderPrefer           String
  roomType               String
  roomInside             String[]
  roomOutside            String[]
  manager                String
  isVerified             Boolean  @default(false)
  verificationPending    Boolean  @default(true)
  paymentDone            Boolean  @default(false)
  isVisible              Boolean  @default(true)
  isDraft                Boolean
  updatedByOwner         DateTime
  verifiedByAdminOrAgent DateTime
  postPropertyByAdmin    Boolean  @default(false)
  createdAt              DateTime @default(now())
  luxury                 String
  MinPrice               Int
  MaxPrice               Int
  totalFloor             Int
  listingShowNo          String
  AdressByAPI            String   @default("")
  isLiveLocation         Boolean  @default(false)
  latitude               Decimal  @default(0)
  longitude              Decimal  @default(0)
  Owner                  Owner    @relation(fields: [ownerId], references: [id])
}

model Payment {
  id                String   @id
  orderId           String   @unique
  listingId         String?
  listingType       String?
  email             String
  phone             String
  amount            Float
  status            String
  city              String?
  townSector        String?
  address           String?
  location          String?
  listingShowNo     String?
  leadCount         Int?
  leadPrice         Float?
  createdAt         DateTime @default(now())
  razorpayOrderId   String?  @unique
  razorpayPaymentId String?  @unique
  updatedAt         DateTime
}

model TempMobileVerification {
  id        Int      @id @default(autoincrement())
  mobile    String   @unique
  otp       Int
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum Role {
  EMPLOYEE
  ADMIN
}

enum VerifyType {
  SELF
  AGENT
}

enum StatusType {
  PENDING
  PAY
  CANCELLED_PAYMENT
  DONE
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}
